/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSameTree(TreeNode* p, TreeNode* q) {
        // we are checking if the tree(initially)/nodes(after few recursions) are null or not in both the tree simultaneously
        if (p == NULL || q == NULL) 
         return (p == q);
        
        // here we will recursively check eacha and every node of the tree and based on that we will return boolean values which will tell if the tree are equal or not at that particular node
        
        return (p->val == q->val && isSameTree(p->left, q->left) && isSameTree(p->right, q->right));
}
};
